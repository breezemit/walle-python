name: CI

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest black flake8 mypy
        
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 walle/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 walle/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Check code formatting with black
      run: |
        black --check walle/
        
    - name: Type check with mypy
      run: |
        mypy walle/ --ignore-missing-imports
        
    - name: Test CLI help
      run: |
        walle --help
        walle release --help
        walle changelog --help  
        walle batch --help
        walle init-config --help
        walle version
        
    - name: Run tests
      run: |
        if [ -d "tests" ] && [ -n "$(ls -A tests)" ]; then
          pytest tests/ -v
        else
          echo "No tests directory found or tests directory is empty"
        fi
        
  build:
    name: Build packages
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel setuptools
        
    - name: Build packages
      run: |
        python -m build
        
    - name: Check built packages
      run: |
        ls -la dist/
        pip install dist/*.whl
        walle --version
        
    - name: Upload artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: python-packages
        path: dist/
        retention-days: 30